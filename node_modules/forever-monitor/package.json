{
  "name": "forever-monitor",
  "description": "Core forever process monitor",
  "version": "1.2.1",
  "author": {
    "name": "Nodejitsu Inc",
    "email": "info@nodejitsu.com"
  },
  "contributors": [
    {
      "name": "Charlie Robbins",
      "email": "charlie@nodejitsu.com"
    },
    {
      "name": "Fedor Indutny",
      "email": "fedor.indutny@gmail.com"
    },
    {
      "name": "James Halliday",
      "email": "mail@substack.net"
    },
    {
      "name": "Bradley Meck",
      "email": "bradley@nodejitsu.com"
    },
    {
      "name": "Dominic Tarr",
      "email": "dominic@nodejitsu.com"
    },
    {
      "name": "Maciej MaÅ‚ecki",
      "email": "maciej@nodejitsu.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/nodejitsu/forever-monitor.git"
  },
  "keywords": [
    "fault tolerant",
    "sysadmin",
    "tools"
  ],
  "dependencies": {
    "broadway": "0.2.x",
    "minimatch": "0.2.x",
    "pkginfo": "0.x.x",
    "ps-tree": "0.0.x",
    "watch": "0.5.x",
    "utile": "0.1.x"
  },
  "devDependencies": {
    "optimist": "0.3.x",
    "vows": "0.6.x"
  },
  "main": "./lib/index.js",
  "scripts": {
    "test": "vows test/**/*-test.js --spec -i"
  },
  "engines": {
    "node": ">= 0.8.x"
  },
  "readme": "# forever-monitor [![Build Status](https://secure.travis-ci.org/nodejitsu/forever-monitor.png)](http://travis-ci.org/nodejitsu/forever-monitor)\r\n\r\nThe core monitoring functionality of forever without the CLI\r\n\r\n## Usage\r\nYou can also use forever from inside your own node.js code.\r\n\r\n``` js\r\n  var forever = require('forever-monitor');\r\n\r\n  var child = new (forever.Monitor)('your-filename.js', {\r\n    max: 3,\r\n    silent: true,\r\n    options: []\r\n  });\r\n\r\n  child.on('exit', function () {\r\n    console.log('your-filename.js has exited after 3 restarts');\r\n  });\r\n  \r\n  child.start();\r\n```\r\n\r\n### Spawning a non-node process\r\nYou can spawn non-node processes too. Either set the `command` key in the\r\n`options` hash or pass in an `Array` in place of the `file` argument like this:\r\n\r\n``` js\r\n  var forever = require('forever-monitor');\r\n  var child = forever.start([ 'perl', '-le', 'print \"moo\"' ], {\r\n    max : 1,\r\n    silent : true\r\n  });\r\n```\r\n\r\n### Options available when using Forever in node.js\r\nThere are several options that you should be aware of when using forever. Most of this configuration is optional.\r\n\r\n``` js\r\n  {\r\n    //\r\n    // Basic configuration options\r\n    //\r\n    'silent': false,            // Silences the output from stdout and stderr in the parent process\r\n    'uid': 'your-UID'           // Custom uid for this forever process. (default: autogen)\r\n    'pidFile': 'path/to/a.pid', // Path to put pid information for the process(es) started\r\n    'max': 10,                  // Sets the maximum number of times a given script should run\r\n    'killTree': true            // Kills the entire child process tree on `exit`\r\n    \r\n    //\r\n    // These options control how quickly forever restarts a child process\r\n    // as well as when to kill a \"spinning\" process\r\n    //\r\n    'minUptime': 2000,     // Minimum time a child process has to be up. Forever will 'exit' otherwise.\r\n    'spinSleepTime': 1000, // Interval between restarts if a child is spinning (i.e. alive < minUptime).\r\n    \r\n    //\r\n    // Command to spawn as well as options and other vars \r\n    // (env, cwd, etc) to pass along\r\n    //\r\n    'command': 'perl',         // Binary to run (default: 'node')\r\n    'options': ['foo','bar'],  // Additional arguments to pass to the script,\r\n    'sourceDir': 'script/path' // Directory that the source script is in\r\n    \r\n    //\r\n    // Options for restarting on watched files.\r\n    //\r\n    'watch': false              // Value indicating if we should watch files.\r\n    'watchIgnoreDotFiles': null // Dot files we should read to ignore ('.foreverignore', etc).\r\n    'watchIgnorePatterns': null // Ignore patterns to use when watching files.\r\n    'watchDirectory': null      // Top-level directory to watch from.\r\n    \r\n    //\r\n    // All or nothing options passed along to `child_process.spawn`.\r\n    //\r\n    'spawnWith': {\r\n      customFds: [-1, -1, -1], // that forever spawns.\r\n      setsid: false\r\n    },\r\n    \r\n    //\r\n    // More specific options to pass along to `child_process.spawn` which \r\n    // will override anything passed to the `spawnWith` option\r\n    //\r\n    'env': { 'ADDITIONAL': 'CHILD ENV VARS' }\r\n    'cwd': '/path/to/child/working/directory'\r\n    \r\n    //\r\n    // Log files and associated logging options for this instance\r\n    //\r\n    'logFile': 'path/to/file', // Path to log output from forever process (when daemonized)\r\n    'outFile': 'path/to/file', // Path to log output from child stdout\r\n    'errFile': 'path/to/file'  // Path to log output from child stderr\r\n  }\r\n```\r\n\r\n### Events available when using an instance of Forever in node.js\r\nEach forever object is an instance of the node.js core EventEmitter. There are several core events that you can listen for:\r\n\r\n* **error**   _[err]:_             Raised when an error occurs\r\n* **start**   _[process, data]:_   Raised when the target script is first started.\r\n* **stop**    _[process]:_         Raised when the target script is stopped by the user\r\n* **restart** _[forever]:_         Raised each time the target script is restarted\r\n* **exit**    _[forever]:_         Raised when the target script actually exits (permenantly).\r\n* **stdout**  _[data]:_            Raised when data is received from the child process' stdout\r\n* **stderr**  _[data]:_            Raised when data is received from the child process' stderr\r\n\r\n## Installation\r\n\r\n``` bash\r\n  $ npm install forever-monitor\r\n```\r\n\r\n## Run Tests\r\n\r\n``` bash\r\n  $ npm test\r\n```\r\n\r\n#### License: MIT\r\n#### Author: [Charlie Robbins](http://github.com/indexzero)\r\n#### Contributors: [Fedor Indutny](http://github.com/indutny), [James Halliday](http://substack.net/), [Charlie McConnell](http://github.com/avianflu), [Maciej Malecki](http://github.com/mmalecki)\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nodejitsu/forever-monitor/issues"
  },
  "_id": "forever-monitor@1.2.1",
  "dist": {
    "shasum": "9e2e891703129b304b1b61a09ca2f3dae58c16f3"
  },
  "_resolved": "git://github.com/abueckerMB/forever-monitor.git#49751ee48c06a57ccafddabd686a45d7629ad83e",
  "_from": "git://github.com/abueckerMB/forever-monitor.git"
}
