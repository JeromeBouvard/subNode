{"version":3,"file":"public\\js\\modernizr.js.map","sources":["vendor/respond/respond.src.js","vendor/modernizr/modernizr.js"],"names":["window","matchMedia","doc","bool","docElem","documentElement","refNode","firstElementChild","firstChild","fakeBody","createElement","div","id","style","cssText","background","appendChild","q","innerHTML","insertBefore","offsetWidth","removeChild","matches","media","document","win","callMedia","applyMedia","respond","update","mediaQueriesSupported","lastCall","resizeDefer","eminpx","mediastyles","rules","appendedEls","parsedSheets","resizeThrottle","head","getElementsByTagName","base","links","requestQueue","ripCSS","sheet","href","isCSS","sheets","sl","length","i","rel","toLowerCase","styleSheet","rawCssText","translate","test","replace","RegExp","$1","split","location","host","push","makeRequests","thisRequest","shift","ajax","styles","j","fullq","thisq","eachq","eql","qs","match","ql","substring","lastIndexOf","repUrls","css","useMedia","$2","hasquery","indexOf","minw","parseFloat","maxw","getEmValue","ret","body","fakeUsed","fromResize","name","docElemProp","currWidth","compatMode","styleBlocks","lastLink","now","Date","getTime","clearTimeout","setTimeout","thisstyle","min","max","minnull","maxnull","em","parentNode","ss","join","type","nextSibling","createTextNode","url","callback","req","xmlHttp","open","onreadystatechange","readyState","status","responseText","send","xmlhttpmethod","XMLHttpRequest","e","ActiveXObject","addEventListener","attachEvent","this","Modernizr","undefined","setCss","str","mStyle","setCssAll","str1","str2","prefixes","is","obj","contains","substr","testProps","props","prefixed","prop","testDOMProps","elem","item","bind","testPropsAll","ucProp","charAt","toUpperCase","slice","cssomPrefixes","webforms","len","attrs","inputElem","list","HTMLDataListElement","inputElemType","defaultView","setAttribute","value","smile","WebkitAppearance","docElement","getComputedStyle","offsetHeight","checkValidity","inputs","featureName","hasOwnProp","version","enableClasses","mod","modElem","toString","omPrefixes","domPrefixes","ns","svg","tests","classes","injectElementWithStyles","rule","nodes","testnames","node","docOverflow","parseInt","overflow","testMediaQuery","mq","msMatchMedia","currentStyle","isEventSupported","eventName","element","TAGNAMES","isSupported","removeAttribute","select","change","submit","reset","error","load","abort","_hasOwnProperty","hasOwnProperty","call","object","property","constructor","prototype","Function","that","target","TypeError","args","arguments","bound","F","self","result","apply","concat","Object","getContext","fillText","WebGLRenderingContext","DocumentTouch","offsetTop","navigator","postMessage","openDatabase","documentMode","history","pushState","backgroundColor","textShadow","opacity","str3","backgroundImage","offsetLeft","getElementById","cssRules","canPlayType","Boolean","ogg","h264","webm","mp3","wav","m4a","localStorage","setItem","removeItem","sessionStorage","Worker","applicationCache","createElementNS","createSVGRect","namespaceURI","feature","input","addTest","key","className","addStyleSheet","ownerDocument","p","parent","lastChild","getElements","elements","html5","getExpandoData","data","expandoData","expando","expanID","nodeName","supportsUnknownElements","cache","cloneNode","saveClones","createElem","canHaveChildren","reSkip","frag","createDocumentFragment","clone","elems","l","shivMethods","createFrag","shivDocument","shivCSS","supportsHtml5Styles","hasCSS","options","a","childNodes","_version","_prefixes","_domPrefixes","_cssomPrefixes","hasEvent","testProp","testAllProps","testStyles"],"mappings":"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","sourcesContent":["/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */\r\n/*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherwise, you don't need this part */\r\nwindow.matchMedia = window.matchMedia || (function(doc, undefined){\r\n  \r\n  var bool,\r\n      docElem  = doc.documentElement,\r\n      refNode  = docElem.firstElementChild || docElem.firstChild,\r\n      // fakeBody required for <FF4 when executed in <head>\r\n      fakeBody = doc.createElement('body'),\r\n      div      = doc.createElement('div');\r\n  \r\n  div.id = 'mq-test-1';\r\n  div.style.cssText = \"position:absolute;top:-100em\";\r\n  fakeBody.style.background = \"none\";\r\n  fakeBody.appendChild(div);\r\n  \r\n  return function(q){\r\n    \r\n    div.innerHTML = '&shy;<style media=\"'+q+'\"> #mq-test-1 { width: 42px; }</style>';\r\n    \r\n    docElem.insertBefore(fakeBody, refNode);\r\n    bool = div.offsetWidth == 42;  \r\n    docElem.removeChild(fakeBody);\r\n    \r\n    return { matches: bool, media: q };\r\n  };\r\n  \r\n})(document);\r\n\r\n\r\n\r\n\r\n/*! Respond.js v1.1.0: min/max-width media query polyfill. (c) Scott Jehl. MIT/GPLv2 Lic. j.mp/respondjs  */\r\n(function( win ){\r\n\t//exposed namespace\r\n\twin.respond\t\t= {};\r\n\t\r\n\t//define update even in native-mq-supporting browsers, to avoid errors\r\n\trespond.update\t= function(){};\r\n\t\r\n\t//expose media query support flag for external use\r\n\trespond.mediaQueriesSupported\t= win.matchMedia && win.matchMedia( \"only all\" ).matches;\r\n\t\r\n\t//if media queries are supported, exit here\r\n\tif( respond.mediaQueriesSupported ){ return; }\r\n\t\r\n\t//define vars\r\n\tvar doc \t\t\t= win.document,\r\n\t\tdocElem \t\t= doc.documentElement,\r\n\t\tmediastyles\t\t= [],\r\n\t\trules\t\t\t= [],\r\n\t\tappendedEls \t= [],\r\n\t\tparsedSheets \t= {},\r\n\t\tresizeThrottle\t= 30,\r\n\t\thead \t\t\t= doc.getElementsByTagName( \"head\" )[0] || docElem,\r\n\t\tbase\t\t\t= doc.getElementsByTagName( \"base\" )[0],\r\n\t\tlinks\t\t\t= head.getElementsByTagName( \"link\" ),\r\n\t\trequestQueue\t= [],\r\n\t\t\r\n\t\t//loop stylesheets, send text content to translate\r\n\t\tripCSS\t\t\t= function(){\r\n\t\t\tvar sheets \t= links,\r\n\t\t\t\tsl \t\t= sheets.length,\r\n\t\t\t\ti\t\t= 0,\r\n\t\t\t\t//vars for loop:\r\n\t\t\t\tsheet, href, media, isCSS;\r\n\r\n\t\t\tfor( ; i < sl; i++ ){\r\n\t\t\t\tsheet\t= sheets[ i ],\r\n\t\t\t\thref\t= sheet.href,\r\n\t\t\t\tmedia\t= sheet.media,\r\n\t\t\t\tisCSS\t= sheet.rel && sheet.rel.toLowerCase() === \"stylesheet\";\r\n\r\n\t\t\t\t//only links plz and prevent re-parsing\r\n\t\t\t\tif( !!href && isCSS && !parsedSheets[ href ] ){\r\n\t\t\t\t\t// selectivizr exposes css through the rawCssText expando\r\n\t\t\t\t\tif (sheet.styleSheet && sheet.styleSheet.rawCssText) {\r\n\t\t\t\t\t\ttranslate( sheet.styleSheet.rawCssText, href, media );\r\n\t\t\t\t\t\tparsedSheets[ href ] = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif( (!/^([a-zA-Z:]*\\/\\/)/.test( href ) && !base)\r\n\t\t\t\t\t\t\t|| href.replace( RegExp.$1, \"\" ).split( \"/\" )[0] === win.location.host ){\r\n\t\t\t\t\t\t\trequestQueue.push( {\r\n\t\t\t\t\t\t\t\thref: href,\r\n\t\t\t\t\t\t\t\tmedia: media\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmakeRequests();\r\n\t\t},\r\n\t\t\r\n\t\t//recurse through request queue, get css text\r\n\t\tmakeRequests\t= function(){\r\n\t\t\tif( requestQueue.length ){\r\n\t\t\t\tvar thisRequest = requestQueue.shift();\r\n\t\t\t\t\r\n\t\t\t\tajax( thisRequest.href, function( styles ){\r\n\t\t\t\t\ttranslate( styles, thisRequest.href, thisRequest.media );\r\n\t\t\t\t\tparsedSheets[ thisRequest.href ] = true;\r\n\t\t\t\t\tmakeRequests();\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t//find media blocks in css text, convert to style blocks\r\n\t\ttranslate\t\t\t= function( styles, href, media ){\r\n\t\t\tvar qs\t\t\t= styles.match(  /@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi ),\r\n\t\t\t\tql\t\t\t= qs && qs.length || 0,\r\n\t\t\t\t//try to get CSS path\r\n\t\t\t\thref\t\t= href.substring( 0, href.lastIndexOf( \"/\" )),\r\n\t\t\t\trepUrls\t\t= function( css ){\r\n\t\t\t\t\treturn css.replace( /(url\\()['\"]?([^\\/\\)'\"][^:\\)'\"]+)['\"]?(\\))/g, \"$1\" + href + \"$2$3\" );\r\n\t\t\t\t},\r\n\t\t\t\tuseMedia\t= !ql && media,\r\n\t\t\t\t//vars used in loop\r\n\t\t\t\ti\t\t\t= 0,\r\n\t\t\t\tj, fullq, thisq, eachq, eql;\r\n\r\n\t\t\t//if path exists, tack on trailing slash\r\n\t\t\tif( href.length ){ href += \"/\"; }\t\r\n\t\t\t\t\r\n\t\t\t//if no internal queries exist, but media attr does, use that\t\r\n\t\t\t//note: this currently lacks support for situations where a media attr is specified on a link AND\r\n\t\t\t\t//its associated stylesheet has internal CSS media queries.\r\n\t\t\t\t//In those cases, the media attribute will currently be ignored.\r\n\t\t\tif( useMedia ){\r\n\t\t\t\tql = 1;\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\tfor( ; i < ql; i++ ){\r\n\t\t\t\tj\t= 0;\r\n\t\t\t\t\r\n\t\t\t\t//media attr\r\n\t\t\t\tif( useMedia ){\r\n\t\t\t\t\tfullq = media;\r\n\t\t\t\t\trules.push( repUrls( styles ) );\r\n\t\t\t\t}\r\n\t\t\t\t//parse for styles\r\n\t\t\t\telse{\r\n\t\t\t\t\tfullq\t= qs[ i ].match( /@media *([^\\{]+)\\{([\\S\\s]+?)$/ ) && RegExp.$1;\r\n\t\t\t\t\trules.push( RegExp.$2 && repUrls( RegExp.$2 ) );\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\teachq\t= fullq.split( \",\" );\r\n\t\t\t\teql\t\t= eachq.length;\r\n\t\t\t\t\t\r\n\t\t\t\tfor( ; j < eql; j++ ){\r\n\t\t\t\t\tthisq\t= eachq[ j ];\r\n\t\t\t\t\tmediastyles.push( { \r\n\t\t\t\t\t\tmedia\t: thisq.split( \"(\" )[ 0 ].match( /(only\\s+)?([a-zA-Z]+)\\s?/ ) && RegExp.$2 || \"all\",\r\n\t\t\t\t\t\trules\t: rules.length - 1,\r\n\t\t\t\t\t\thasquery: thisq.indexOf(\"(\") > -1,\r\n\t\t\t\t\t\tminw\t: thisq.match( /\\(min\\-width:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/ ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || \"\" ), \r\n\t\t\t\t\t\tmaxw\t: thisq.match( /\\(max\\-width:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/ ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || \"\" )\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\r\n\t\t\tapplyMedia();\r\n\t\t},\r\n        \t\r\n\t\tlastCall,\r\n\t\t\r\n\t\tresizeDefer,\r\n\t\t\r\n\t\t// returns the value of 1em in pixels\r\n\t\tgetEmValue\t\t= function() {\r\n\t\t\tvar ret,\r\n\t\t\t\tdiv = doc.createElement('div'),\r\n\t\t\t\tbody = doc.body,\r\n\t\t\t\tfakeUsed = false;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\tdiv.style.cssText = \"position:absolute;font-size:1em;width:1em\";\r\n\t\t\t\t\t\r\n\t\t\tif( !body ){\r\n\t\t\t\tbody = fakeUsed = doc.createElement( \"body\" );\r\n\t\t\t\tbody.style.background = \"none\";\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\tbody.appendChild( div );\r\n\t\t\t\t\t\t\t\t\r\n\t\t\tdocElem.insertBefore( body, docElem.firstChild );\r\n\t\t\t\t\t\t\t\t\r\n\t\t\tret = div.offsetWidth;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\tif( fakeUsed ){\r\n\t\t\t\tdocElem.removeChild( body );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbody.removeChild( div );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//also update eminpx before returning\r\n\t\t\tret = eminpx = parseFloat(ret);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\t//cached container for 1em value, populated the first time it's needed \r\n\t\teminpx,\r\n\t\t\r\n\t\t//enable/disable styles\r\n\t\tapplyMedia\t\t\t= function( fromResize ){\r\n\t\t\tvar name\t\t= \"clientWidth\",\r\n\t\t\t\tdocElemProp\t= docElem[ name ],\r\n\t\t\t\tcurrWidth \t= doc.compatMode === \"CSS1Compat\" && docElemProp || doc.body[ name ] || docElemProp,\r\n\t\t\t\tstyleBlocks\t= {},\r\n\t\t\t\tlastLink\t= links[ links.length-1 ],\r\n\t\t\t\tnow \t\t= (new Date()).getTime();\r\n\r\n\t\t\t//throttle resize calls\t\r\n\t\t\tif( fromResize && lastCall && now - lastCall < resizeThrottle ){\r\n\t\t\t\tclearTimeout( resizeDefer );\r\n\t\t\t\tresizeDefer = setTimeout( applyMedia, resizeThrottle );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlastCall\t= now;\r\n\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tfor( var i in mediastyles ){\r\n\t\t\t\tvar thisstyle = mediastyles[ i ],\r\n\t\t\t\t\tmin = thisstyle.minw,\r\n\t\t\t\t\tmax = thisstyle.maxw,\r\n\t\t\t\t\tminnull = min === null,\r\n\t\t\t\t\tmaxnull = max === null,\r\n\t\t\t\t\tem = \"em\";\r\n\t\t\t\t\r\n\t\t\t\tif( !!min ){\r\n\t\t\t\t\tmin = parseFloat( min ) * ( min.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) : 1 );\r\n\t\t\t\t}\r\n\t\t\t\tif( !!max ){\r\n\t\t\t\t\tmax = parseFloat( max ) * ( max.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) : 1 );\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// if there's no media query at all (the () part), or min or max is not null, and if either is present, they're true\r\n\t\t\t\tif( !thisstyle.hasquery || ( !minnull || !maxnull ) && ( minnull || currWidth >= min ) && ( maxnull || currWidth <= max ) ){\r\n\t\t\t\t\t\tif( !styleBlocks[ thisstyle.media ] ){\r\n\t\t\t\t\t\t\tstyleBlocks[ thisstyle.media ] = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstyleBlocks[ thisstyle.media ].push( rules[ thisstyle.rules ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//remove any existing respond style element(s)\r\n\t\t\tfor( var i in appendedEls ){\r\n\t\t\t\tif( appendedEls[ i ] && appendedEls[ i ].parentNode === head ){\r\n\t\t\t\t\thead.removeChild( appendedEls[ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//inject active styles, grouped by media type\r\n\t\t\tfor( var i in styleBlocks ){\r\n\t\t\t\tvar ss\t\t= doc.createElement( \"style\" ),\r\n\t\t\t\t\tcss\t\t= styleBlocks[ i ].join( \"\\n\" );\r\n\t\t\t\t\r\n\t\t\t\tss.type = \"text/css\";\t\r\n\t\t\t\tss.media\t= i;\r\n\t\t\t\t\r\n\t\t\t\t//originally, ss was appended to a documentFragment and sheets were appended in bulk.\r\n\t\t\t\t//this caused crashes in IE in a number of circumstances, such as when the HTML element had a bg image set, so appending beforehand seems best. Thanks to @dvelyk for the initial research on this one!\r\n\t\t\t\thead.insertBefore( ss, lastLink.nextSibling );\r\n\t\t\t\t\r\n\t\t\t\tif ( ss.styleSheet ){ \r\n\t\t        \tss.styleSheet.cssText = css;\r\n\t\t        } \r\n\t\t        else {\r\n\t\t\t\t\tss.appendChild( doc.createTextNode( css ) );\r\n\t\t        }\r\n\t\t        \r\n\t\t\t\t//push to appendedEls to track for later removal\r\n\t\t\t\tappendedEls.push( ss );\r\n\t\t\t}\r\n\t\t},\r\n\t\t//tweaked Ajax functions from Quirksmode\r\n\t\tajax = function( url, callback ) {\r\n\t\t\tvar req = xmlHttp();\r\n\t\t\tif (!req){\r\n\t\t\t\treturn;\r\n\t\t\t}\t\r\n\t\t\treq.open( \"GET\", url, true );\r\n\t\t\treq.onreadystatechange = function () {\r\n\t\t\t\tif ( req.readyState != 4 || req.status != 200 && req.status != 304 ){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tcallback( req.responseText );\r\n\t\t\t}\r\n\t\t\tif ( req.readyState == 4 ){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\treq.send( null );\r\n\t\t},\r\n\t\t//define ajax obj \r\n\t\txmlHttp = (function() {\r\n\t\t\tvar xmlhttpmethod = false;\t\r\n\t\t\ttry {\r\n\t\t\t\txmlhttpmethod = new XMLHttpRequest();\r\n\t\t\t}\r\n\t\t\tcatch( e ){\r\n\t\t\t\txmlhttpmethod = new ActiveXObject( \"Microsoft.XMLHTTP\" );\r\n\t\t\t}\r\n\t\t\treturn function(){\r\n\t\t\t\treturn xmlhttpmethod;\r\n\t\t\t};\r\n\t\t})();\r\n\t\r\n\t//translate CSS\r\n\tripCSS();\r\n\t\r\n\t//expose update for re-running respond later on\r\n\trespond.update = ripCSS;\r\n\t\r\n\t//adjust on resize\r\n\tfunction callMedia(){\r\n\t\tapplyMedia( true );\r\n\t}\r\n\tif( win.addEventListener ){\r\n\t\twin.addEventListener( \"resize\", callMedia, false );\r\n\t}\r\n\telse if( win.attachEvent ){\r\n\t\twin.attachEvent( \"onresize\", callMedia );\r\n\t}\r\n})(this);\r\n","/*!\r\n * Modernizr v2.6.2\r\n * www.modernizr.com\r\n *\r\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\r\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\r\n */\r\n\r\n/*\r\n * Modernizr tests which native CSS3 and HTML5 features are available in\r\n * the current UA and makes the results available to you in two ways:\r\n * as properties on a global Modernizr object, and as classes on the\r\n * <html> element. This information allows you to progressively enhance\r\n * your pages with a granular level of control over the experience.\r\n *\r\n * Modernizr has an optional (not included) conditional resource loader\r\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\r\n * To get a build that includes Modernizr.load(), as well as choosing\r\n * which tests to include, go to www.modernizr.com/download/\r\n *\r\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\r\n * Contributors   Ryan Seddon, Ben Alman\r\n */\r\n\r\nwindow.Modernizr = (function( window, document, undefined ) {\r\n\r\n    var version = '2.6.2',\r\n\r\n    Modernizr = {},\r\n\r\n    /*>>cssclasses*/\r\n    // option for enabling the HTML classes to be added\r\n    enableClasses = true,\r\n    /*>>cssclasses*/\r\n\r\n    docElement = document.documentElement,\r\n\r\n    /**\r\n     * Create our \"modernizr\" element that we do most feature tests on.\r\n     */\r\n    mod = 'modernizr',\r\n    modElem = document.createElement(mod),\r\n    mStyle = modElem.style,\r\n\r\n    /**\r\n     * Create the input element for various Web Forms feature tests.\r\n     */\r\n    inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\r\n\r\n    /*>>smile*/\r\n    smile = ':)',\r\n    /*>>smile*/\r\n\r\n    toString = {}.toString,\r\n\r\n    // TODO :: make the prefixes more granular\r\n    /*>>prefixes*/\r\n    // List of property values to set for css tests. See ticket #21\r\n    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\r\n    /*>>prefixes*/\r\n\r\n    /*>>domprefixes*/\r\n    // Following spec is to expose vendor-specific style properties as:\r\n    //   elem.style.WebkitBorderRadius\r\n    // and the following would be incorrect:\r\n    //   elem.style.webkitBorderRadius\r\n\r\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\r\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\r\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\r\n\r\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\r\n    omPrefixes = 'Webkit Moz O ms',\r\n\r\n    cssomPrefixes = omPrefixes.split(' '),\r\n\r\n    domPrefixes = omPrefixes.toLowerCase().split(' '),\r\n    /*>>domprefixes*/\r\n\r\n    /*>>ns*/\r\n    ns = {'svg': 'http://www.w3.org/2000/svg'},\r\n    /*>>ns*/\r\n\r\n    tests = {},\r\n    inputs = {},\r\n    attrs = {},\r\n\r\n    classes = [],\r\n\r\n    slice = classes.slice,\r\n\r\n    featureName, // used in testing loop\r\n\r\n\r\n    /*>>teststyles*/\r\n    // Inject element with style element and some CSS rules\r\n    injectElementWithStyles = function( rule, callback, nodes, testnames ) {\r\n\r\n      var style, ret, node, docOverflow,\r\n          div = document.createElement('div'),\r\n          // After page load injecting a fake body doesn't work so check if body exists\r\n          body = document.body,\r\n          // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\r\n          fakeBody = body || document.createElement('body');\r\n\r\n      if ( parseInt(nodes, 10) ) {\r\n          // In order not to give false positives we create a node for each test\r\n          // This also allows the method to scale for unspecified uses\r\n          while ( nodes-- ) {\r\n              node = document.createElement('div');\r\n              node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\r\n              div.appendChild(node);\r\n          }\r\n      }\r\n\r\n      // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\r\n      // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\r\n      // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\r\n      // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\r\n      // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\r\n      style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\r\n      div.id = mod;\r\n      // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\r\n      // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\r\n      (body ? div : fakeBody).innerHTML += style;\r\n      fakeBody.appendChild(div);\r\n      if ( !body ) {\r\n          //avoid crashing IE8, if background image is used\r\n          fakeBody.style.background = '';\r\n          //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\r\n          fakeBody.style.overflow = 'hidden';\r\n          docOverflow = docElement.style.overflow;\r\n          docElement.style.overflow = 'hidden';\r\n          docElement.appendChild(fakeBody);\r\n      }\r\n\r\n      ret = callback(div, rule);\r\n      // If this is done after page load we don't want to remove the body so check if body exists\r\n      if ( !body ) {\r\n          fakeBody.parentNode.removeChild(fakeBody);\r\n          docElement.style.overflow = docOverflow;\r\n      } else {\r\n          div.parentNode.removeChild(div);\r\n      }\r\n\r\n      return !!ret;\r\n\r\n    },\r\n    /*>>teststyles*/\r\n\r\n    /*>>mq*/\r\n    // adapted from matchMedia polyfill\r\n    // by Scott Jehl and Paul Irish\r\n    // gist.github.com/786768\r\n    testMediaQuery = function( mq ) {\r\n\r\n      var matchMedia = window.matchMedia || window.msMatchMedia;\r\n      if ( matchMedia ) {\r\n        return matchMedia(mq).matches;\r\n      }\r\n\r\n      var bool;\r\n\r\n      injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {\r\n        bool = (window.getComputedStyle ?\r\n                  getComputedStyle(node, null) :\r\n                  node.currentStyle)['position'] == 'absolute';\r\n      });\r\n\r\n      return bool;\r\n\r\n     },\r\n     /*>>mq*/\r\n\r\n\r\n    /*>>hasevent*/\r\n    //\r\n    // isEventSupported determines if a given element supports the given event\r\n    // kangax.github.com/iseventsupported/\r\n    //\r\n    // The following results are known incorrects:\r\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\r\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\r\n    //   ...\r\n    isEventSupported = (function() {\r\n\r\n      var TAGNAMES = {\r\n        'select': 'input', 'change': 'input',\r\n        'submit': 'form', 'reset': 'form',\r\n        'error': 'img', 'load': 'img', 'abort': 'img'\r\n      };\r\n\r\n      function isEventSupported( eventName, element ) {\r\n\r\n        element = element || document.createElement(TAGNAMES[eventName] || 'div');\r\n        eventName = 'on' + eventName;\r\n\r\n        // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\r\n        var isSupported = eventName in element;\r\n\r\n        if ( !isSupported ) {\r\n          // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\r\n          if ( !element.setAttribute ) {\r\n            element = document.createElement('div');\r\n          }\r\n          if ( element.setAttribute && element.removeAttribute ) {\r\n            element.setAttribute(eventName, '');\r\n            isSupported = is(element[eventName], 'function');\r\n\r\n            // If property was created, \"remove it\" (by setting value to `undefined`)\r\n            if ( !is(element[eventName], 'undefined') ) {\r\n              element[eventName] = undefined;\r\n            }\r\n            element.removeAttribute(eventName);\r\n          }\r\n        }\r\n\r\n        element = null;\r\n        return isSupported;\r\n      }\r\n      return isEventSupported;\r\n    })(),\r\n    /*>>hasevent*/\r\n\r\n    // TODO :: Add flag for hasownprop ? didn't last time\r\n\r\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\r\n    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\r\n\r\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\r\n      hasOwnProp = function (object, property) {\r\n        return _hasOwnProperty.call(object, property);\r\n      };\r\n    }\r\n    else {\r\n      hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\r\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\r\n      };\r\n    }\r\n\r\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\r\n    // es5.github.com/#x15.3.4.5\r\n\r\n    if (!Function.prototype.bind) {\r\n      Function.prototype.bind = function bind(that) {\r\n\r\n        var target = this;\r\n\r\n        if (typeof target != \"function\") {\r\n            throw new TypeError();\r\n        }\r\n\r\n        var args = slice.call(arguments, 1),\r\n            bound = function () {\r\n\r\n            if (this instanceof bound) {\r\n\r\n              var F = function(){};\r\n              F.prototype = target.prototype;\r\n              var self = new F();\r\n\r\n              var result = target.apply(\r\n                  self,\r\n                  args.concat(slice.call(arguments))\r\n              );\r\n              if (Object(result) === result) {\r\n                  return result;\r\n              }\r\n              return self;\r\n\r\n            } else {\r\n\r\n              return target.apply(\r\n                  that,\r\n                  args.concat(slice.call(arguments))\r\n              );\r\n\r\n            }\r\n\r\n        };\r\n\r\n        return bound;\r\n      };\r\n    }\r\n\r\n    /**\r\n     * setCss applies given styles to the Modernizr DOM node.\r\n     */\r\n    function setCss( str ) {\r\n        mStyle.cssText = str;\r\n    }\r\n\r\n    /**\r\n     * setCssAll extrapolates all vendor-specific css strings.\r\n     */\r\n    function setCssAll( str1, str2 ) {\r\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\r\n    }\r\n\r\n    /**\r\n     * is returns a boolean for if typeof obj is exactly type.\r\n     */\r\n    function is( obj, type ) {\r\n        return typeof obj === type;\r\n    }\r\n\r\n    /**\r\n     * contains returns a boolean for if substr is found within str.\r\n     */\r\n    function contains( str, substr ) {\r\n        return !!~('' + str).indexOf(substr);\r\n    }\r\n\r\n    /*>>testprop*/\r\n\r\n    // testProps is a generic CSS / DOM property test.\r\n\r\n    // In testing support for a given CSS property, it's legit to test:\r\n    //    `elem.style[styleName] !== undefined`\r\n    // If the property is supported it will return an empty string,\r\n    // if unsupported it will return undefined.\r\n\r\n    // We'll take advantage of this quick test and skip setting a style\r\n    // on our modernizr element, but instead just testing undefined vs\r\n    // empty string.\r\n\r\n    // Because the testing of the CSS property names (with \"-\", as\r\n    // opposed to the camelCase DOM properties) is non-portable and\r\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\r\n    // we explicitly reject properties with dashes so that authors\r\n    // developing in WebKit or IE first don't end up with\r\n    // browser-specific content by accident.\r\n\r\n    function testProps( props, prefixed ) {\r\n        for ( var i in props ) {\r\n            var prop = props[i];\r\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\r\n                return prefixed == 'pfx' ? prop : true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /*>>testprop*/\r\n\r\n    // TODO :: add testDOMProps\r\n    /**\r\n     * testDOMProps is a generic DOM property test; if a browser supports\r\n     *   a certain property, it won't return undefined for it.\r\n     */\r\n    function testDOMProps( props, obj, elem ) {\r\n        for ( var i in props ) {\r\n            var item = obj[props[i]];\r\n            if ( item !== undefined) {\r\n\r\n                // return the property name as a string\r\n                if (elem === false) return props[i];\r\n\r\n                // let's bind a function\r\n                if (is(item, 'function')){\r\n                  // default to autobind unless override\r\n                  return item.bind(elem || obj);\r\n                }\r\n\r\n                // return the unbound function or obj or value\r\n                return item;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /*>>testallprops*/\r\n    /**\r\n     * testPropsAll tests a list of DOM properties we want to check against.\r\n     *   We specify literally ALL possible (known and/or likely) properties on\r\n     *   the element including the non-vendor prefixed one, for forward-\r\n     *   compatibility.\r\n     */\r\n    function testPropsAll( prop, prefixed, elem ) {\r\n\r\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\r\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\r\n\r\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\r\n        if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\r\n          return testProps(props, prefixed);\r\n\r\n        // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\r\n        } else {\r\n          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\r\n          return testDOMProps(props, prefixed, elem);\r\n        }\r\n    }\r\n    /*>>testallprops*/\r\n\r\n\r\n    /**\r\n     * Tests\r\n     * -----\r\n     */\r\n\r\n    // The *new* flexbox\r\n    // dev.w3.org/csswg/css3-flexbox\r\n\r\n    tests['flexbox'] = function() {\r\n      return testPropsAll('flexWrap');\r\n    };\r\n\r\n    // The *old* flexbox\r\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\r\n\r\n    tests['flexboxlegacy'] = function() {\r\n        return testPropsAll('boxDirection');\r\n    };\r\n\r\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\r\n    // so we actually have to call getContext() to verify\r\n    // github.com/Modernizr/Modernizr/issues/issue/97/\r\n\r\n    tests['canvas'] = function() {\r\n        var elem = document.createElement('canvas');\r\n        return !!(elem.getContext && elem.getContext('2d'));\r\n    };\r\n\r\n    tests['canvastext'] = function() {\r\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\r\n    };\r\n\r\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\r\n\r\n    // We do a soft detect which may false positive in order to avoid\r\n    // an expensive context creation: bugzil.la/732441\r\n\r\n    tests['webgl'] = function() {\r\n        return !!window.WebGLRenderingContext;\r\n    };\r\n\r\n    /*\r\n     * The Modernizr.touch test only indicates if the browser supports\r\n     *    touch events, which does not necessarily reflect a touchscreen\r\n     *    device, as evidenced by tablets running Windows 7 or, alas,\r\n     *    the Palm Pre / WebOS (touch) phones.\r\n     *\r\n     * Additionally, Chrome (desktop) used to lie about its support on this,\r\n     *    but that has since been rectified: crbug.com/36415\r\n     *\r\n     * We also test for Firefox 4 Multitouch Support.\r\n     *\r\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\r\n     */\r\n\r\n    tests['touch'] = function() {\r\n        var bool;\r\n\r\n        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\r\n          bool = true;\r\n        } else {\r\n          injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\r\n            bool = node.offsetTop === 9;\r\n          });\r\n        }\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n    // geolocation is often considered a trivial feature detect...\r\n    // Turns out, it's quite tricky to get right:\r\n    //\r\n    // Using !!navigator.geolocation does two things we don't want. It:\r\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\r\n    //   2. Disables page caching in WebKit: webk.it/43956\r\n    //\r\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\r\n    // a false positive that would throw an exception: bugzil.la/688158\r\n\r\n    tests['geolocation'] = function() {\r\n        return 'geolocation' in navigator;\r\n    };\r\n\r\n\r\n    tests['postmessage'] = function() {\r\n      return !!window.postMessage;\r\n    };\r\n\r\n\r\n    // Chrome incognito mode used to throw an exception when using openDatabase\r\n    // It doesn't anymore.\r\n    tests['websqldatabase'] = function() {\r\n      return !!window.openDatabase;\r\n    };\r\n\r\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\r\n    // - Webkit's implementation is accessible through webkitIndexedDB\r\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\r\n    // For speed, we don't test the legacy (and beta-only) indexedDB\r\n    tests['indexedDB'] = function() {\r\n      return !!testPropsAll(\"indexedDB\", window);\r\n    };\r\n\r\n    // documentMode logic from YUI to filter out IE8 Compat Mode\r\n    //   which false positives.\r\n    tests['hashchange'] = function() {\r\n      return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\r\n    };\r\n\r\n    // Per 1.6:\r\n    // This used to be Modernizr.historymanagement but the longer\r\n    // name has been deprecated in favor of a shorter and property-matching one.\r\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\r\n    // and in the first release thereafter disappear entirely.\r\n    tests['history'] = function() {\r\n      return !!(window.history && history.pushState);\r\n    };\r\n\r\n    tests['draganddrop'] = function() {\r\n        var div = document.createElement('div');\r\n        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\r\n    };\r\n\r\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\r\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\r\n    // FF10 still uses prefixes, so check for it until then.\r\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\r\n    tests['websockets'] = function() {\r\n        return 'WebSocket' in window || 'MozWebSocket' in window;\r\n    };\r\n\r\n\r\n    // css-tricks.com/rgba-browser-support/\r\n    tests['rgba'] = function() {\r\n        // Set an rgba() color and check the returned value\r\n\r\n        setCss('background-color:rgba(150,255,150,.5)');\r\n\r\n        return contains(mStyle.backgroundColor, 'rgba');\r\n    };\r\n\r\n    tests['hsla'] = function() {\r\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\r\n        //   except IE9 who retains it as hsla\r\n\r\n        setCss('background-color:hsla(120,40%,100%,.5)');\r\n\r\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\r\n    };\r\n\r\n    tests['multiplebgs'] = function() {\r\n        // Setting multiple images AND a color on the background shorthand property\r\n        //  and then querying the style.background property value for the number of\r\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\r\n\r\n        setCss('background:url(https://),url(https://),red url(https://)');\r\n\r\n        // If the UA supports multiple backgrounds, there should be three occurrences\r\n        //   of the string \"url(\" in the return value for elemStyle.background\r\n\r\n        return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\r\n    };\r\n\r\n\r\n\r\n    // this will false positive in Opera Mini\r\n    //   github.com/Modernizr/Modernizr/issues/396\r\n\r\n    tests['backgroundsize'] = function() {\r\n        return testPropsAll('backgroundSize');\r\n    };\r\n\r\n    tests['borderimage'] = function() {\r\n        return testPropsAll('borderImage');\r\n    };\r\n\r\n\r\n    // Super comprehensive table about all the unique implementations of\r\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\r\n\r\n    tests['borderradius'] = function() {\r\n        return testPropsAll('borderRadius');\r\n    };\r\n\r\n    // WebOS unfortunately false positives on this test.\r\n    tests['boxshadow'] = function() {\r\n        return testPropsAll('boxShadow');\r\n    };\r\n\r\n    // FF3.0 will false positive on this test\r\n    tests['textshadow'] = function() {\r\n        return document.createElement('div').style.textShadow === '';\r\n    };\r\n\r\n\r\n    tests['opacity'] = function() {\r\n        // Browsers that actually have CSS Opacity implemented have done so\r\n        //  according to spec, which means their return values are within the\r\n        //  range of [0.0,1.0] - including the leading zero.\r\n\r\n        setCssAll('opacity:.55');\r\n\r\n        // The non-literal . in this regex is intentional:\r\n        //   German Chrome returns this value as 0,55\r\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\r\n        return (/^0.55$/).test(mStyle.opacity);\r\n    };\r\n\r\n\r\n    // Note, Android < 4 will pass this test, but can only animate\r\n    //   a single property at a time\r\n    //   daneden.me/2011/12/putting-up-with-androids-bullshit/\r\n    tests['cssanimations'] = function() {\r\n        return testPropsAll('animationName');\r\n    };\r\n\r\n\r\n    tests['csscolumns'] = function() {\r\n        return testPropsAll('columnCount');\r\n    };\r\n\r\n\r\n    tests['cssgradients'] = function() {\r\n        /**\r\n         * For CSS Gradients syntax, please see:\r\n         * webkit.org/blog/175/introducing-css-gradients/\r\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\r\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\r\n         * dev.w3.org/csswg/css3-images/#gradients-\r\n         */\r\n\r\n        var str1 = 'background-image:',\r\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\r\n            str3 = 'linear-gradient(left top,#9f9, white);';\r\n\r\n        setCss(\r\n             // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\r\n              (str1 + '-webkit- '.split(' ').join(str2 + str1) +\r\n             // standard syntax             // trailing 'background-image:'\r\n              prefixes.join(str3 + str1)).slice(0, -str1.length)\r\n        );\r\n\r\n        return contains(mStyle.backgroundImage, 'gradient');\r\n    };\r\n\r\n\r\n    tests['cssreflections'] = function() {\r\n        return testPropsAll('boxReflect');\r\n    };\r\n\r\n\r\n    tests['csstransforms'] = function() {\r\n        return !!testPropsAll('transform');\r\n    };\r\n\r\n\r\n    tests['csstransforms3d'] = function() {\r\n\r\n        var ret = !!testPropsAll('perspective');\r\n\r\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\r\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\r\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\r\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\r\n        if ( ret && 'webkitPerspective' in docElement.style ) {\r\n\r\n          // Webkit allows this media query to succeed only if the feature is enabled.\r\n          // `@media (transform-3d),(-webkit-transform-3d){ ... }`\r\n          injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {\r\n            ret = node.offsetLeft === 9 && node.offsetHeight === 3;\r\n          });\r\n        }\r\n        return ret;\r\n    };\r\n\r\n\r\n    tests['csstransitions'] = function() {\r\n        return testPropsAll('transition');\r\n    };\r\n\r\n\r\n    /*>>fontface*/\r\n    // @font-face detection routine by Diego Perini\r\n    // javascript.nwbox.com/CSSSupport/\r\n\r\n    // false positives:\r\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\r\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\r\n    tests['fontface'] = function() {\r\n        var bool;\r\n\r\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\r\n          var style = document.getElementById('smodernizr'),\r\n              sheet = style.sheet || style.styleSheet,\r\n              cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\r\n\r\n          bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\r\n        });\r\n\r\n        return bool;\r\n    };\r\n    /*>>fontface*/\r\n\r\n    // CSS generated content detection\r\n    tests['generatedcontent'] = function() {\r\n        var bool;\r\n\r\n        injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:\"',smile,'\";visibility:hidden;font:3px/1 a}'].join(''), function( node ) {\r\n          bool = node.offsetHeight >= 3;\r\n        });\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n\r\n    // These tests evaluate support of the video/audio elements, as well as\r\n    // testing what types of content they support.\r\n    //\r\n    // We're using the Boolean constructor here, so that we can extend the value\r\n    // e.g.  Modernizr.video     // true\r\n    //       Modernizr.video.ogg // 'probably'\r\n    //\r\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\r\n    //                     thx to NielsLeenheer and zcorpan\r\n\r\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\r\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\r\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\r\n\r\n    tests['video'] = function() {\r\n        var elem = document.createElement('video'),\r\n            bool = false;\r\n\r\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\r\n        try {\r\n            if ( bool = !!elem.canPlayType ) {\r\n                bool      = new Boolean(bool);\r\n                bool.ogg  = elem.canPlayType('video/ogg; codecs=\"theora\"')      .replace(/^no$/,'');\r\n\r\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\r\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') .replace(/^no$/,'');\r\n\r\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\r\n            }\r\n\r\n        } catch(e) { }\r\n\r\n        return bool;\r\n    };\r\n\r\n    tests['audio'] = function() {\r\n        var elem = document.createElement('audio'),\r\n            bool = false;\r\n\r\n        try {\r\n            if ( bool = !!elem.canPlayType ) {\r\n                bool      = new Boolean(bool);\r\n                bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\r\n                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\r\n\r\n                // Mimetypes accepted:\r\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\r\n                //   bit.ly/iphoneoscodecs\r\n                bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\r\n                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\r\n                              elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\r\n            }\r\n        } catch(e) { }\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n    // In FF4, if disabled, window.localStorage should === null.\r\n\r\n    // Normally, we could not test that directly and need to do a\r\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\r\n    //   throw bugzil.la/365772 if cookies are disabled\r\n\r\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\r\n    // will throw the exception:\r\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\r\n    // Peculiarly, getItem and removeItem calls do not throw.\r\n\r\n    // Because we are forced to try/catch this, we'll go aggressive.\r\n\r\n    // Just FWIW: IE8 Compat mode supports these features completely:\r\n    //   www.quirksmode.org/dom/html5.html\r\n    // But IE8 doesn't support either with local files\r\n\r\n    tests['localstorage'] = function() {\r\n        try {\r\n            localStorage.setItem(mod, mod);\r\n            localStorage.removeItem(mod);\r\n            return true;\r\n        } catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    tests['sessionstorage'] = function() {\r\n        try {\r\n            sessionStorage.setItem(mod, mod);\r\n            sessionStorage.removeItem(mod);\r\n            return true;\r\n        } catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n\r\n    tests['webworkers'] = function() {\r\n        return !!window.Worker;\r\n    };\r\n\r\n\r\n    tests['applicationcache'] = function() {\r\n        return !!window.applicationCache;\r\n    };\r\n\r\n\r\n    // Thanks to Erik Dahlstrom\r\n    tests['svg'] = function() {\r\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\r\n    };\r\n\r\n    // specifically for SVG inline in HTML, not within XHTML\r\n    // test page: paulirish.com/demo/inline-svg\r\n    tests['inlinesvg'] = function() {\r\n      var div = document.createElement('div');\r\n      div.innerHTML = '<svg/>';\r\n      return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\r\n    };\r\n\r\n    // SVG SMIL animation\r\n    tests['smil'] = function() {\r\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\r\n    };\r\n\r\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\r\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\r\n\r\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\r\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\r\n    tests['svgclippaths'] = function() {\r\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\r\n    };\r\n\r\n    /*>>webforms*/\r\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\r\n    // Hold this guy to execute in a moment.\r\n    function webforms() {\r\n        /*>>input*/\r\n        // Run through HTML5's new input attributes to see if the UA understands any.\r\n        // We're using f which is the <input> element created early on\r\n        // Mike Taylr has created a comprehensive resource for testing these attributes\r\n        //   when applied to all input types:\r\n        //   miketaylr.com/code/input-type-attr.html\r\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\r\n\r\n        // Only input placeholder is tested while textarea's placeholder is not.\r\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\r\n        // Both tests are available in feature-detects/forms-placeholder.js\r\n        Modernizr['input'] = (function( props ) {\r\n            for ( var i = 0, len = props.length; i < len; i++ ) {\r\n                attrs[ props[i] ] = !!(props[i] in inputElem);\r\n            }\r\n            if (attrs.list){\r\n              // safari false positive's on datalist: webk.it/74252\r\n              // see also github.com/Modernizr/Modernizr/issues/146\r\n              attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\r\n            }\r\n            return attrs;\r\n        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\r\n        /*>>input*/\r\n\r\n        /*>>inputtypes*/\r\n        // Run through HTML5's new input types to see if the UA understands any.\r\n        //   This is put behind the tests runloop because it doesn't return a\r\n        //   true/false like all the other tests; instead, it returns an object\r\n        //   containing each input type with its corresponding true/false value\r\n\r\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\r\n        Modernizr['inputtypes'] = (function(props) {\r\n\r\n            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {\r\n\r\n                inputElem.setAttribute('type', inputElemType = props[i]);\r\n                bool = inputElem.type !== 'text';\r\n\r\n                // We first check to see if the type we give it sticks..\r\n                // If the type does, we feed it a textual value, which shouldn't be valid.\r\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\r\n                if ( bool ) {\r\n\r\n                    inputElem.value         = smile;\r\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\r\n\r\n                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\r\n\r\n                      docElement.appendChild(inputElem);\r\n                      defaultView = document.defaultView;\r\n\r\n                      // Safari 2-4 allows the smiley as a value, despite making a slider\r\n                      bool =  defaultView.getComputedStyle &&\r\n                              defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\r\n                              // Mobile android web browser has false positive, so must\r\n                              // check the height to see if the widget is actually there.\r\n                              (inputElem.offsetHeight !== 0);\r\n\r\n                      docElement.removeChild(inputElem);\r\n\r\n                    } else if ( /^(search|tel)$/.test(inputElemType) ){\r\n                      // Spec doesn't define any special parsing or detectable UI\r\n                      //   behaviors so we pass these through as true\r\n\r\n                      // Interestingly, opera fails the earlier test, so it doesn't\r\n                      //  even make it here.\r\n\r\n                    } else if ( /^(url|email)$/.test(inputElemType) ) {\r\n                      // Real url and email support comes with prebaked validation.\r\n                      bool = inputElem.checkValidity && inputElem.checkValidity() === false;\r\n\r\n                    } else {\r\n                      // If the upgraded input compontent rejects the :) text, we got a winner\r\n                      bool = inputElem.value != smile;\r\n                    }\r\n                }\r\n\r\n                inputs[ props[i] ] = !!bool;\r\n            }\r\n            return inputs;\r\n        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));\r\n        /*>>inputtypes*/\r\n    }\r\n    /*>>webforms*/\r\n\r\n\r\n    // End of test definitions\r\n    // -----------------------\r\n\r\n\r\n\r\n    // Run through all tests and detect their support in the current UA.\r\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\r\n    for ( var feature in tests ) {\r\n        if ( hasOwnProp(tests, feature) ) {\r\n            // run the test, throw the return value into the Modernizr,\r\n            //   then based on that boolean, define an appropriate className\r\n            //   and push it into an array of classes we'll join later.\r\n            featureName  = feature.toLowerCase();\r\n            Modernizr[featureName] = tests[feature]();\r\n\r\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\r\n        }\r\n    }\r\n\r\n    /*>>webforms*/\r\n    // input tests need to run.\r\n    Modernizr.input || webforms();\r\n    /*>>webforms*/\r\n\r\n\r\n    /**\r\n     * addTest allows the user to define their own feature tests\r\n     * the result will be added onto the Modernizr object,\r\n     * as well as an appropriate className set on the html element\r\n     *\r\n     * @param feature - String naming the feature\r\n     * @param test - Function returning true if feature is supported, false if not\r\n     */\r\n     Modernizr.addTest = function ( feature, test ) {\r\n       if ( typeof feature == 'object' ) {\r\n         for ( var key in feature ) {\r\n           if ( hasOwnProp( feature, key ) ) {\r\n             Modernizr.addTest( key, feature[ key ] );\r\n           }\r\n         }\r\n       } else {\r\n\r\n         feature = feature.toLowerCase();\r\n\r\n         if ( Modernizr[feature] !== undefined ) {\r\n           // we're going to quit if you're trying to overwrite an existing test\r\n           // if we were to allow it, we'd do this:\r\n           //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\r\n           //   docElement.className = docElement.className.replace( re, '' );\r\n           // but, no rly, stuff 'em.\r\n           return Modernizr;\r\n         }\r\n\r\n         test = typeof test == 'function' ? test() : test;\r\n\r\n         if (typeof enableClasses !== \"undefined\" && enableClasses) {\r\n           docElement.className += ' ' + (test ? '' : 'no-') + feature;\r\n         }\r\n         Modernizr[feature] = test;\r\n\r\n       }\r\n\r\n       return Modernizr; // allow chaining.\r\n     };\r\n\r\n\r\n    // Reset modElem.cssText to nothing to reduce memory footprint.\r\n    setCss('');\r\n    modElem = inputElem = null;\r\n\r\n    /*>>shiv*/\r\n    /*! HTML5 Shiv v3.6.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed */\r\n    ;(function(window, document) {\r\n    /*jshint evil:true */\r\n      /** Preset options */\r\n      var options = window.html5 || {};\r\n\r\n      /** Used to skip problem elements */\r\n      var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\r\n\r\n      /** Not all elements can be cloned in IE **/\r\n      var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\r\n\r\n      /** Detect whether the browser supports default html5 styles */\r\n      var supportsHtml5Styles;\r\n\r\n      /** Name of the expando, to work with multiple documents or to re-shiv one document */\r\n      var expando = '_html5shiv';\r\n\r\n      /** The id for the the documents expando */\r\n      var expanID = 0;\r\n\r\n      /** Cached data for each document */\r\n      var expandoData = {};\r\n\r\n      /** Detect whether the browser supports unknown elements */\r\n      var supportsUnknownElements;\r\n\r\n      (function() {\r\n        try {\r\n            var a = document.createElement('a');\r\n            a.innerHTML = '<xyz></xyz>';\r\n            //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\r\n            supportsHtml5Styles = ('hidden' in a);\r\n\r\n            supportsUnknownElements = a.childNodes.length == 1 || (function() {\r\n              // assign a false positive if unable to shiv\r\n              (document.createElement)('a');\r\n              var frag = document.createDocumentFragment();\r\n              return (\r\n                typeof frag.cloneNode == 'undefined' ||\r\n                typeof frag.createDocumentFragment == 'undefined' ||\r\n                typeof frag.createElement == 'undefined'\r\n              );\r\n            }());\r\n        } catch(e) {\r\n          supportsHtml5Styles = true;\r\n          supportsUnknownElements = true;\r\n        }\r\n\r\n      }());\r\n\r\n      /*--------------------------------------------------------------------------*/\r\n\r\n      /**\r\n       * Creates a style sheet with the given CSS text and adds it to the document.\r\n       * @private\r\n       * @param {Document} ownerDocument The document.\r\n       * @param {String} cssText The CSS text.\r\n       * @returns {StyleSheet} The style element.\r\n       */\r\n      function addStyleSheet(ownerDocument, cssText) {\r\n        var p = ownerDocument.createElement('p'),\r\n            parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\r\n\r\n        p.innerHTML = 'x<style>' + cssText + '</style>';\r\n        return parent.insertBefore(p.lastChild, parent.firstChild);\r\n      }\r\n\r\n      /**\r\n       * Returns the value of `html5.elements` as an array.\r\n       * @private\r\n       * @returns {Array} An array of shived element node names.\r\n       */\r\n      function getElements() {\r\n        var elements = html5.elements;\r\n        return typeof elements == 'string' ? elements.split(' ') : elements;\r\n      }\r\n\r\n        /**\r\n       * Returns the data associated to the given document\r\n       * @private\r\n       * @param {Document} ownerDocument The document.\r\n       * @returns {Object} An object of data.\r\n       */\r\n      function getExpandoData(ownerDocument) {\r\n        var data = expandoData[ownerDocument[expando]];\r\n        if (!data) {\r\n            data = {};\r\n            expanID++;\r\n            ownerDocument[expando] = expanID;\r\n            expandoData[expanID] = data;\r\n        }\r\n        return data;\r\n      }\r\n\r\n      /**\r\n       * returns a shived element for the given nodeName and document\r\n       * @memberOf html5\r\n       * @param {String} nodeName name of the element\r\n       * @param {Document} ownerDocument The context document.\r\n       * @returns {Object} The shived element.\r\n       */\r\n      function createElement(nodeName, ownerDocument, data){\r\n        if (!ownerDocument) {\r\n            ownerDocument = document;\r\n        }\r\n        if(supportsUnknownElements){\r\n            return ownerDocument.createElement(nodeName);\r\n        }\r\n        if (!data) {\r\n            data = getExpandoData(ownerDocument);\r\n        }\r\n        var node;\r\n\r\n        if (data.cache[nodeName]) {\r\n            node = data.cache[nodeName].cloneNode();\r\n        } else if (saveClones.test(nodeName)) {\r\n            node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\r\n        } else {\r\n            node = data.createElem(nodeName);\r\n        }\r\n\r\n        // Avoid adding some elements to fragments in IE < 9 because\r\n        // * Attributes like `name` or `type` cannot be set/changed once an element\r\n        //   is inserted into a document/fragment\r\n        // * Link elements with `src` attributes that are inaccessible, as with\r\n        //   a 403 response, will cause the tab/window to crash\r\n        // * Script elements appended to fragments will execute when their `src`\r\n        //   or `text` property is set\r\n        return node.canHaveChildren && !reSkip.test(nodeName) ? data.frag.appendChild(node) : node;\r\n      }\r\n\r\n      /**\r\n       * returns a shived DocumentFragment for the given document\r\n       * @memberOf html5\r\n       * @param {Document} ownerDocument The context document.\r\n       * @returns {Object} The shived DocumentFragment.\r\n       */\r\n      function createDocumentFragment(ownerDocument, data){\r\n        if (!ownerDocument) {\r\n            ownerDocument = document;\r\n        }\r\n        if(supportsUnknownElements){\r\n            return ownerDocument.createDocumentFragment();\r\n        }\r\n        data = data || getExpandoData(ownerDocument);\r\n        var clone = data.frag.cloneNode(),\r\n            i = 0,\r\n            elems = getElements(),\r\n            l = elems.length;\r\n        for(;i<l;i++){\r\n            clone.createElement(elems[i]);\r\n        }\r\n        return clone;\r\n      }\r\n\r\n      /**\r\n       * Shivs the `createElement` and `createDocumentFragment` methods of the document.\r\n       * @private\r\n       * @param {Document|DocumentFragment} ownerDocument The document.\r\n       * @param {Object} data of the document.\r\n       */\r\n      function shivMethods(ownerDocument, data) {\r\n        if (!data.cache) {\r\n            data.cache = {};\r\n            data.createElem = ownerDocument.createElement;\r\n            data.createFrag = ownerDocument.createDocumentFragment;\r\n            data.frag = data.createFrag();\r\n        }\r\n\r\n\r\n        ownerDocument.createElement = function(nodeName) {\r\n          //abort shiv\r\n          if (!html5.shivMethods) {\r\n              return data.createElem(nodeName);\r\n          }\r\n          return createElement(nodeName, ownerDocument, data);\r\n        };\r\n\r\n        ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\r\n          'var n=f.cloneNode(),c=n.createElement;' +\r\n          'h.shivMethods&&(' +\r\n            // unroll the `createElement` calls\r\n            getElements().join().replace(/\\w+/g, function(nodeName) {\r\n              data.createElem(nodeName);\r\n              data.frag.createElement(nodeName);\r\n              return 'c(\"' + nodeName + '\")';\r\n            }) +\r\n          ');return n}'\r\n        )(html5, data.frag);\r\n      }\r\n\r\n      /*--------------------------------------------------------------------------*/\r\n\r\n      /**\r\n       * Shivs the given document.\r\n       * @memberOf html5\r\n       * @param {Document} ownerDocument The document to shiv.\r\n       * @returns {Document} The shived document.\r\n       */\r\n      function shivDocument(ownerDocument) {\r\n        if (!ownerDocument) {\r\n            ownerDocument = document;\r\n        }\r\n        var data = getExpandoData(ownerDocument);\r\n\r\n        if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\r\n          data.hasCSS = !!addStyleSheet(ownerDocument,\r\n            // corrects block display not defined in IE6/7/8/9\r\n            'article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}' +\r\n            // adds styling not present in IE6/7/8/9\r\n            'mark{background:#FF0;color:#000}'\r\n          );\r\n        }\r\n        if (!supportsUnknownElements) {\r\n          shivMethods(ownerDocument, data);\r\n        }\r\n        return ownerDocument;\r\n      }\r\n\r\n      /*--------------------------------------------------------------------------*/\r\n\r\n      /**\r\n       * The `html5` object is exposed so that more elements can be shived and\r\n       * existing shiving can be detected on iframes.\r\n       * @type Object\r\n       * @example\r\n       *\r\n       * // options can be changed before the script is included\r\n       * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\r\n       */\r\n      var html5 = {\r\n\r\n        /**\r\n         * An array or space separated string of node names of the elements to shiv.\r\n         * @memberOf html5\r\n         * @type Array|String\r\n         */\r\n        'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video',\r\n\r\n        /**\r\n         * A flag to indicate that the HTML5 style sheet should be inserted.\r\n         * @memberOf html5\r\n         * @type Boolean\r\n         */\r\n        'shivCSS': (options.shivCSS !== false),\r\n\r\n        /**\r\n         * Is equal to true if a browser supports creating unknown/HTML5 elements\r\n         * @memberOf html5\r\n         * @type boolean\r\n         */\r\n        'supportsUnknownElements': supportsUnknownElements,\r\n\r\n        /**\r\n         * A flag to indicate that the document's `createElement` and `createDocumentFragment`\r\n         * methods should be overwritten.\r\n         * @memberOf html5\r\n         * @type Boolean\r\n         */\r\n        'shivMethods': (options.shivMethods !== false),\r\n\r\n        /**\r\n         * A string to describe the type of `html5` object (\"default\" or \"default print\").\r\n         * @memberOf html5\r\n         * @type String\r\n         */\r\n        'type': 'default',\r\n\r\n        // shivs the document according to the specified `html5` object options\r\n        'shivDocument': shivDocument,\r\n\r\n        //creates a shived element\r\n        createElement: createElement,\r\n\r\n        //creates a shived documentFragment\r\n        createDocumentFragment: createDocumentFragment\r\n      };\r\n\r\n      /*--------------------------------------------------------------------------*/\r\n\r\n      // expose html5\r\n      window.html5 = html5;\r\n\r\n      // shiv the document\r\n      shivDocument(document);\r\n\r\n    }(this, document));\r\n    /*>>shiv*/\r\n\r\n    // Assign private properties to the return object with prefix\r\n    Modernizr._version      = version;\r\n\r\n    // expose these for the plugin API. Look in the source for how to join() them against your input\r\n    /*>>prefixes*/\r\n    Modernizr._prefixes     = prefixes;\r\n    /*>>prefixes*/\r\n    /*>>domprefixes*/\r\n    Modernizr._domPrefixes  = domPrefixes;\r\n    Modernizr._cssomPrefixes  = cssomPrefixes;\r\n    /*>>domprefixes*/\r\n\r\n    /*>>mq*/\r\n    // Modernizr.mq tests a given media query, live against the current state of the window\r\n    // A few important notes:\r\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\r\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\r\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\r\n    //       Modernizr.mq('(min-width:0)')\r\n    // usage:\r\n    // Modernizr.mq('only screen and (max-width:768)')\r\n    Modernizr.mq            = testMediaQuery;\r\n    /*>>mq*/\r\n\r\n    /*>>hasevent*/\r\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\r\n    // Modernizr.hasEvent('gesturestart', elem)\r\n    Modernizr.hasEvent      = isEventSupported;\r\n    /*>>hasevent*/\r\n\r\n    /*>>testprop*/\r\n    // Modernizr.testProp() investigates whether a given style property is recognized\r\n    // Note that the property names must be provided in the camelCase variant.\r\n    // Modernizr.testProp('pointerEvents')\r\n    Modernizr.testProp      = function(prop){\r\n        return testProps([prop]);\r\n    };\r\n    /*>>testprop*/\r\n\r\n    /*>>testallprops*/\r\n    // Modernizr.testAllProps() investigates whether a given style property,\r\n    //   or any of its vendor-prefixed variants, is recognized\r\n    // Note that the property names must be provided in the camelCase variant.\r\n    // Modernizr.testAllProps('boxSizing')\r\n    Modernizr.testAllProps  = testPropsAll;\r\n    /*>>testallprops*/\r\n\r\n\r\n    /*>>teststyles*/\r\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\r\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\r\n    Modernizr.testStyles    = injectElementWithStyles;\r\n    /*>>teststyles*/\r\n\r\n\r\n    /*>>prefixed*/\r\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\r\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\r\n\r\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\r\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\r\n    //\r\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\r\n\r\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\r\n    //\r\n    //     var transEndEventNames = {\r\n    //       'WebkitTransition' : 'webkitTransitionEnd',\r\n    //       'MozTransition'    : 'transitionend',\r\n    //       'OTransition'      : 'oTransitionEnd',\r\n    //       'msTransition'     : 'MSTransitionEnd',\r\n    //       'transition'       : 'transitionend'\r\n    //     },\r\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\r\n\r\n    Modernizr.prefixed      = function(prop, obj, elem){\r\n      if(!obj) {\r\n        return testPropsAll(prop, 'pfx');\r\n      } else {\r\n        // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\r\n        return testPropsAll(prop, obj, elem);\r\n      }\r\n    };\r\n    /*>>prefixed*/\r\n\r\n\r\n    /*>>cssclasses*/\r\n    // Remove \"no-js\" class from <html> element, if it exists:\r\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\r\n\r\n                            // Add the new classes to the <html> element.\r\n                            (enableClasses ? ' js ' + classes.join(' ') : '');\r\n    /*>>cssclasses*/\r\n\r\n    return Modernizr;\r\n\r\n})(this, this.document);\r\n"]}